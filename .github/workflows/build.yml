name: Build Executables

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Executables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.6'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        PYINSTALLER="
          pyinstaller
            --onefile --windowed --noconfirm --clean
            PALMS.py
          "

        if [[ "${{ matrix.os }}" == "macos-latest" ]]
        then
          $PYINSTALLER --icon bell_icon.icns
        elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]
        then
          $PYINSTALLER
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]
        then
          $PYINSTALLER
        fi
      shell: bash

    - name: Prepare release directory
      run: mkdir -p release

    - name: Archive Linux executable
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        mv dist/PALMS ./release/PALMS_linux
        chmod +x ./release/PALMS_linux

    - name: Archive Windows executable
      if: ${{ matrix.os == 'windows-latest' }}
      run: mv dist/PALMS.exe ./release/PALMS_windows.exe

    - name: Archive MacOS executable
      if: ${{ matrix.os == 'macos-latest' }}
      run: mv dist/PALMS ./release/PALMS_macos

    - name: Copy Experiments directory to release
      run: cp -r Experiments ./release/

    - name: Commit 'latest' rag.
      if: github.ref == 'refs/heads/main'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -f latest
        git push origin latest --force
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload all release files as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-release
        path: release/

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
